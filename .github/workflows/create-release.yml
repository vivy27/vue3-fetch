on:
  push:
    tags:
      - "v*"

name: Create release

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: Use Node version from .nvmrc
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}

      - name: Write .npmrc so it can login to npmjs
        run: npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: npm install

      - name: Build the package
        run: npm run build

      - name: Publish to npm registry
        run: npm publish --access restricted

  create-github-release:
    name: Create Github release
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Checkout the repo
      - uses: actions/checkout@v3

      - name: Create release notes
      - uses: actions/github-script@v6
        run: 'echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            if(!process.env.RELEASE_TAG){
              core.setFailed("The environment variable RELEASE_TAG is not defined.");
              return;
            }

            try {
              const response = await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: process.env.RELEASE_TAG,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });
              core.exportVariable('RELEASE_ID', response.data.id);
              core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
            } catch (error) {
              core.setFailed(error.message);
            }
